@import 'colors';
@import 'dimens';
@import 'common';
////////////////
//Header
///////////////

.header {
    display: block;
    background: var(--card-background);
    height: auto;
    min-height: var( --header-height );
    box-sizing: border-box;

    
}

.mobileHeaderBackground
{
    position: absolute;
    height: var( --header-height );
    bottom: 0px;
    width:100%;
    background: var(--card-background);

    //border-bottom-left-radius: var(--small-gap);
    border-radius: var( --insignificant-gap );

    z-index: -1;
}

.mobileHeaderContainer
{
    display: flex;
    flex-direction: column;
    margin-top: var(--tiny-gap);
}

.logo
{
    //position:absolute;
    //top: -20%;
    stroke: transparent;
    fill: #fff;
    //height:var( --logo-size );
    width:var( --logo-size );
    margin-left: var( --tiny-gap );
    z-index: 1;

}

.logoContainer
{
    //position:relative;
    height:var( --header-height );
    //width:var( --header-height );
    margin-right: var( --tiny-gap );
    overflow: visible;
    align-items: center;
    display: flex;
    justify-content: center;
    align-items: center;
}


.spacer
{
    height:var( --header-separator-size );
    width:var( --header-separator-size );
    background: var(--body-background);
    margin-bottom:auto;

    border-bottom-left-radius: var(--small-gap);
    border-bottom-right-radius: var(--small-gap);
}

.headerBrand
{
    width: fit-content;
    padding:var( --small-gap );
    overflow:visible;
    color: var(--normal-text-color);

    font-weight: bolder;
    font-size: var(--font-large);
}

.sortButton
{  
    @extend %button;
    background: transparent;
    font-size: var(--font-large);
}

a.sortButton
{
    text-decoration: none;
}

.sortButton:hover
{
    box-shadow:0px var( --header-button-underline-height ) 0px var(--button-indicator-color) inset;
    color: var(--bright-text-color);
}


.sortButtonActive
{  
    @extend .sortButton;
    box-shadow:0px var( --header-button-underline-height ) 0px var(--button-highlight-color) inset;
}

.sortButtonActive:hover
{
    box-shadow:0px var( --header-button-underline-height ) 0px var(--button-highlight-color) inset;
}


.sortButtonSub
{  
    @extend .sortButton;
    //background: var(--hidden-element-color);
    //margin-top: 20px;
    font-size: var(--font-medium);
    height: var( --header-sub-button-height );
}

.sortButtonActiveSub
{  
    @extend .sortButton;
    //background: var(--hidden-element-color);
    height: var( --header-sub-button-height );
    //margin-top: 20px;
    font-size: var(--font-medium);
    box-shadow:0px var( --header-button-underline-height ) 0px var(--button-highlight-color) inset;
}

.topTimeContainer
{
    display: flex;
    flex-direction: row;
    align-content: center;
    align-items: center;
    height: var(--header-height);
    margin: 0px;
    width: 100%;

    background: var(--card-background);
}

.topTimeFloatContainer
{
    float: left;
}

.topTimeMobileSpacer
{
    //Normally compensates spacer
    width: var(--header-separator-size);
    min-width: 0px;
    max-width: var(--header-separator-size);
}

.headerLeft
{
    float:left;
    max-width: 100%;
    //width:fit-content;
    display: flex;
    flex-direction: row;

}

.mobileScrollContainerOuter
{
    overflow-x: scroll;
}

.mobileScrollContainer
{
    display: inline-flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    overflow: visible;
}

.headerLeftDoubleHeight
{
    //When displaying the top time range options
    //in the compact header, we want the right float
    //(user settings, login/out) to be displayed below them.
    //header is --header-height with overflow visible,
    //so making the left float twice the height makes 
    //the right float appear in the right location.
    height: var( --header-height );
    padding-bottom: var( --header-height );
}

.headerRow
{
    //width:fit-content;
    display: flex;
    flex-direction: row;
    
}

.headerColumn
{
    max-width: 100%;
    display: flex;
    flex-direction: column;
    overflow: visible;
}

.headerRight
{
    height: var( --header-height );
    //position: relative;
    float:right;
    display: flex;
    flex-direction: row;
    padding-right:var( --large-gap );
    background: var(--card-background);
    border-bottom-left-radius: var(--small-gap);

    //Would want to switch this on only when pushed to second line
    //box-shadow: 0px 10px 10px var(--card-shadow-color;)
}


//Nonense for an inverted rounded corner
.headerRightCornerOuter
{
    position: absolute;
    height: var(--tiny-gap);
    width: var(--tiny-gap);

    left: calc( 0px - var(--tiny-gap));
    
    background: var(--card-background);

    //Needs to be hidden behind headerbackground
    z-index: -2;
}

.headerRightCornerInner
{
    position: absolute;
    height: var(--tiny-gap);
    width: var(--tiny-gap);

    background: var(--body-background);
    border-top-right-radius: var(--tiny-gap);

    //Needs to be hidden behind headerbackground
    z-index: -1;
}

.headerClear
{
    clear: both;
}


///////////////////////
// Mobile
////////////////////////

@media only screen and (max-width: 1100px)
{
    
    .header {
        height: var(--header-height);
        
    }

    .mobileHeaderContainer
    {
        margin-bottom: var(--insignificant-gap);
    }
    

    .headerRight
    {
        margin-left: var(--tiny-gap);
    }

    .topTimeMobileSpacer
    {
        //Compensate for icon + icon margin
        width: calc( var(--logo-size) + var(--tiny-gap) );
        min-width: 0px;
        max-width: calc( var(--logo-size) + var(--tiny-gap) );
    }
}